<idea-plugin url="https://github.com/stokito/IdeaJol">
    <name>JOL Java Object Layout</name>
    <id>JOL</id>
    <idea-version since-build="223.0"/>
    <category>Profiling</category>
    <category>Inspection</category>
    <description>
        <![CDATA[
        <p>
        <a href="https://github.com/openjdk/jol">Java Object Layout (JOL)</a> is a tool to analyze in memory object layout schemes in JVMs.
        It allows you to make an estimate how much memory the object takes. This allows to make the simplest but most efficient performance improvements.
        Just check your DTOs if they fit into 64 bytes of processor's cache line.
        </p>
        <p>For example, in HotSpot VM on 64x processor an empty string "" takes 40 bytes i.e. 24 bytes for String object itself + 16 bytes for an internal empty char array.
        </p>
        <p>
        <a href="https://github.com/stokito/IdeaJol">Source code on GitHub</a>
        </p>
    ]]>
    </description>
    <change-notes><![CDATA[
      <ul>
      <li>v1.12.0 Remove deprecated API</li>
      <li>v1.11.1 Fix UI and #38</li>
      <li>v1.11.0 Update JOL to v0.17 with support of new Lilliput layouts. Change in UI</li>
      <li>v1.10.0 Update JOL to v0.16 and support new layouts</li>
      <li>v1.9.1 Fix bugs, avoid deprecated API</li>
      <li>v1.9.0 Update JOL to v0.14 and minor changes</li>
      <li>v1.8.0 Workaround for annoying NPE #20</li>
      <li>v1.7.0 Support of Kotlin classes. Converted to UAST and fixed minor bugs</li>
      <li>v1.6.1 Update JOL to v0.10 and fix of minor bugs</li>
      <li>v1.6.0 Added an inspection to report about to big classes.</li>
      <li>v1.5.0 show layout in table instead of raw text.</li>
      <li>v1.3.0 first published version.</li>
      <ul>
    ]]>
    </change-notes>
    <version>1.12.0</version>
    <vendor email="stokito@gmail.com" url="https://stokito.com/">Sergey Ponomarev</vendor>
    <depends>com.intellij.modules.lang</depends>
    <depends>com.intellij.modules.java</depends>
    <actions>
        <action id="showObjectLayout" class="com.github.stokito.IdeaJol.ShowObjectLayoutAction" text="Show Object Layout" description="Show JVM Object Layout of the current class" icon="/ram-13x13.png">
            <add-to-group group-id="EditorPopupMenu" anchor="last"/>
            <add-to-group group-id="ProjectViewPopupMenu" anchor="last"/>
            <add-to-group group-id="CodeMenu" anchor="last"/>
        </action>
    </actions>

    <extensions defaultExtensionNs="com.intellij">
        <toolWindow id="JOL" anchor="right" icon="/ram-13x13.png" factoryClass="com.github.stokito.IdeaJol.toolwindow.JolToolWindowFactory"/>
        <projectService serviceImplementation="com.github.stokito.IdeaJol.toolwindow.JolView"/>
        <localInspection shortName="jol"
                         displayName="JOL: Class has too big memory footprint"
                         groupPath="Java"
                         groupName="Memory"
                         enabledByDefault="true"
                         language="UAST"
                         level="WARNING"
                         implementationClass="com.github.stokito.IdeaJol.inspection.JolInspection"/>
    </extensions>
</idea-plugin>
